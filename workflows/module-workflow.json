{
  "name": "Module Development Workflow",
  "description": "Complete workflow for developing a new module from conception to deployment",
  "type": "module",
  "totalSteps": 13,
  "questions": {
    "title": "Module Pre-Planning Questions",
    "description": "Essential questions to answer before implementing a new module",
    "questions": [
      {
        "id": "purpose",
        "question": "What is the primary purpose of this module?",
        "type": "text",
        "required": true,
        "guidance": "Be specific about what business problem this module solves",
        "examples": [
          "Manage customer contact information and communication history",
          "Handle user authentication and authorization",
          "Process and validate payment transactions"
        ]
      },
      {
        "id": "scope",
        "question": "What are the key functionalities this module will provide?",
        "type": "list",
        "required": true,
        "guidance": "List 3-7 core features. Be specific but not overly detailed",
        "examples": [
          "Create, read, update, delete contacts",
          "Search and filter contacts",
          "Import/export contact data",
          "Track communication history"
        ]
      },
      {
        "id": "users",
        "question": "Who are the primary users of this module?",
        "type": "text",
        "required": true,
        "guidance": "Identify user roles and their relationship to the module",
        "examples": [
          "Sales team members, customer service representatives",
          "End users, system administrators",
          "Internal staff, external API consumers"
        ]
      },
      {
        "id": "data_entities",
        "question": "What are the main data entities this module will manage?",
        "type": "list",
        "required": true,
        "guidance": "List the key data objects with their primary attributes",
        "examples": [
          "Contact: name, email, phone, company, tags",
          "Communication: type, date, content, contact_id",
          "Company: name, industry, size, contacts"
        ]
      },
      {
        "id": "integrations",
        "question": "What external systems or APIs will this module integrate with?",
        "type": "list",
        "required": false,
        "guidance": "Include both internal modules and external services. Note: Authentication, UI components, and deployment are covered in the development guide.",
        "examples": [
          "Email service (SendGrid, Mailgun)",
          "CRM system (Salesforce, HubSpot)",
          "Third-party APIs (payment, analytics)"
        ]
      },
      {
        "id": "performance_requirements",
        "question": "What are the performance and scalability requirements?",
        "type": "text",
        "required": true,
        "guidance": "Consider data volume, concurrent users, response times",
        "examples": [
          "Handle 10,000+ contacts with sub-second search",
          "Support 50 concurrent users",
          "Process bulk imports of 1000+ records"
        ]
      },
      {
        "id": "security_considerations",
        "question": "What additional security and privacy considerations are important for this module?",
        "type": "list",
        "required": false,
        "guidance": "Focus on module-specific security needs. Basic authentication and security setup is covered in the development guide.",
        "examples": [
          "PII data encryption for sensitive fields",
          "Special compliance requirements (GDPR, HIPAA)",
          "Module-specific audit logging needs",
          "Data retention policies"
        ]
      },
      {
        "id": "ui_requirements",
        "question": "What are the key user interface requirements specific to this module?",
        "type": "text",
        "required": true,
        "guidance": "Focus on module-specific UI needs. Standard components and patterns are available in the development guide.",
        "examples": [
          "Dashboard with contact overview, search bar, filterable list",
          "Specialized data visualization components",
          "Bulk action capabilities for mass updates"
        ]
      },
      {
        "id": "success_metrics",
        "question": "How will you measure the success of this module?",
        "type": "list",
        "required": true,
        "guidance": "Define measurable outcomes and KPIs",
        "examples": [
          "Reduce time to find contact information by 50%",
          "Increase user adoption rate to 80%",
          "Achieve 99.9% uptime",
          "Process imports 10x faster than current system"
        ]
      },
      {
        "id": "constraints",
        "question": "What constraints or limitations should be considered beyond the standard tech stack?",
        "type": "list",
        "required": false,
        "guidance": "Focus on module-specific constraints. Standard tech stack and architecture patterns are defined in the development guide.",
        "examples": [
          "Must integrate with legacy system",
          "Specific performance requirements",
          "Budget constraint of $X",
          "Must be completed within 3 months"
        ]
      }
    ]
  },
  "qualityStandards": {
    "title": "Module Quality Standards",
    "description": "Quality criteria for evaluating module pre-planning answers",
    "scoring": {
      "scale": 5,
      "thresholds": {
        "excellent": 4.5,
        "good": 3.5,
        "acceptable": 2.5,
        "needs_improvement": 1.5,
        "inadequate": 0
      }
    },
    "criteria": [
      {
        "id": "purpose_clarity",
        "question_id": "purpose",
        "weight": 15,
        "description": "How clear and specific is the module's purpose?",
        "excellent": "Purpose is crystal clear, specific, and directly addresses a business need",
        "good": "Purpose is clear with minor ambiguity",
        "acceptable": "Purpose is somewhat clear but could be more specific",
        "needs_improvement": "Purpose is vague or too broad",
        "inadequate": "Purpose is unclear or missing"
      },
      {
        "id": "scope_definition",
        "question_id": "scope",
        "weight": 15,
        "description": "How well-defined is the module scope?",
        "excellent": "Scope is well-defined with 3-7 specific, achievable functionalities",
        "good": "Scope is mostly clear with minor gaps",
        "acceptable": "Scope is defined but may be too broad or narrow",
        "needs_improvement": "Scope is unclear or poorly defined",
        "inadequate": "Scope is missing or completely unclear"
      },
      {
        "id": "user_understanding",
        "question_id": "users",
        "weight": 10,
        "description": "How well are the target users identified?",
        "excellent": "Users are clearly identified with roles and use cases",
        "good": "Users are well identified with minor gaps",
        "acceptable": "Users are identified but lack detail",
        "needs_improvement": "Users are poorly identified",
        "inadequate": "Users are not identified or unclear"
      },
      {
        "id": "data_modeling",
        "question_id": "data_entities",
        "weight": 15,
        "description": "How well are the data entities defined?",
        "excellent": "Data entities are comprehensive with key attributes and relationships",
        "good": "Data entities are well defined with minor gaps",
        "acceptable": "Data entities are defined but lack detail",
        "needs_improvement": "Data entities are poorly defined",
        "inadequate": "Data entities are missing or unclear"
      },
      {
        "id": "performance_consideration",
        "question_id": "performance_requirements",
        "weight": 10,
        "description": "How well are performance requirements considered?",
        "excellent": "Performance requirements are specific and measurable",
        "good": "Performance requirements are mostly clear",
        "acceptable": "Performance requirements are mentioned but vague",
        "needs_improvement": "Performance requirements are poorly defined",
        "inadequate": "Performance requirements are missing"
      },
      {
        "id": "security_awareness",
        "question_id": "security_considerations",
        "weight": 15,
        "description": "How well are security considerations addressed?",
        "excellent": "Comprehensive security considerations with specific measures",
        "good": "Good security considerations with minor gaps",
        "acceptable": "Basic security considerations mentioned",
        "needs_improvement": "Limited security considerations",
        "inadequate": "Security considerations missing or inadequate"
      },
      {
        "id": "ui_planning",
        "question_id": "ui_requirements",
        "weight": 10,
        "description": "How well are UI requirements planned?",
        "excellent": "UI requirements are detailed and user-focused",
        "good": "UI requirements are well planned with minor gaps",
        "acceptable": "UI requirements are basic but adequate",
        "needs_improvement": "UI requirements are poorly planned",
        "inadequate": "UI requirements are missing or unclear"
      },
      {
        "id": "success_metrics",
        "question_id": "success_metrics",
        "weight": 10,
        "description": "How well are success metrics defined?",
        "excellent": "Success metrics are specific, measurable, and relevant",
        "good": "Success metrics are mostly well-defined",
        "acceptable": "Success metrics are mentioned but could be more specific",
        "needs_improvement": "Success metrics are poorly defined",
        "inadequate": "Success metrics are missing or unclear"
      }
    ],
    "recommendations": {
      "excellent": "Excellent pre-planning! You're ready to proceed with detailed implementation planning.",
      "good": "Good pre-planning with minor areas for improvement. Consider refining the highlighted areas before proceeding.",
      "acceptable": "Acceptable pre-planning but several areas need more detail. Please address the feedback before creating the implementation plan.",
      "needs_improvement": "The pre-planning needs significant improvement. Please revise your answers based on the feedback provided.",
      "inadequate": "The pre-planning is inadequate. Please start over and provide more detailed, thoughtful answers."
    }
  },
  "steps": [
    {
      "id": "0_context_preparation",
      "name": "Context Preparation",
      "description": "Load documentation context and prepare AI agent knowledge base",
      "deliverables": [
        "Documentation headings loaded into context",
        "Available tools and components identified",
        "Agent rules and constraints understood",
        "Project structure familiarized",
        "Existing module patterns analyzed"
      ],
      "activities": [
        "Use load-documentation-context tool to efficiently load all essential context",
        "Alternative: Use individual tools (list-docs, get-sections, get-agent-rules, get-tools) for specific context",
        "Review loaded documentation headings and available components",
        "Understand agent behavioral constraints",
        "Analyze existing module patterns and architecture",
        "Familiarize with project structure and development conventions"
      ],
      "exitCriteria": [
        "Documentation context loaded",
        "Agent rules understood",
        "Available tools identified",
        "Project patterns familiarized",
        "Architecture context established"
      ]
    },
    {
      "id": "1_preplanning",
      "name": "Pre-Planning & Requirements",
      "description": "Define and validate the module concept and requirements using embedded questions and quality evaluation",
      "deliverables": [
        "Module purpose and scope definition",
        "User requirements and personas",
        "Data model design",
        "Integration requirements",
        "Quality-evaluated pre-planning document"
      ],
      "activities": [
        "Answer all 10 pre-planning questions thoroughly (see questions section above)",
        "Use evaluate-workflow-progress tool for quality assessment with pre-planning answers",
        "Refine answers until achieving 3.5+ quality score",
        "Implementation plan will be automatically generated upon quality approval",
        "Stakeholder interviews and requirements gathering"
      ],
      "exitCriteria": [
        "All required questions answered",
        "Quality score ≥ 3.5/5.0",
        "Implementation plan generated",
        "Stakeholder requirements documented",
        "Business case approved"
      ]
    },
    {
      "id": "2_architecture",
      "name": "Architecture & Design",
      "description": "Design the complete module architecture and interfaces",
      "deliverables": [
        "System architecture document",
        "Database schema design",
        "API specifications",
        "Security architecture",
        "Integration points definition",
        "UI/UX design system"
      ],
      "activities": [
        "Design overall system architecture",
        "Create detailed database schema",
        "Define all API endpoints and contracts",
        "Design security model and access controls",
        "Plan integration with existing systems",
        "Create UI mockups and user flows",
        "Performance and scalability planning"
      ],
      "exitCriteria": [
        "Architecture review completed",
        "Database design approved",
        "API contracts finalized",
        "Security model validated",
        "Integration approach confirmed",
        "UI/UX design approved"
      ]
    },
    {
      "id": "2_5_database_structure",
      "name": "Database Structure Review",
      "description": "Review and validate database structure requirements against current schema",
      "deliverables": [
        "Database schema analysis",
        "Required schema changes identified",
        "Supabase migration scripts",
        "Updated database documentation"
      ],
      "activities": [
        "Review current database structure in database.md",
        "Identify any required additions or modifications for the module",
        "Discuss proposed changes with user if any are needed",
        "Provide user with specific migration SQL code to run in Supabase dashboard",
        "Wait for user confirmation that database changes have been applied",
        "Run generate-database-docs script to update documentation"
      ],
      "exitCriteria": [
        "Database structure reviewed",
        "All required schema changes identified",
        "User has applied any necessary database changes",
        "Database documentation updated"
      ]
    },
    {
      "id": "3_setup",
      "name": "Project Setup & Infrastructure",
      "description": "Set up development environment and project infrastructure",
      "deliverables": [
        "Development environment configured",
        "Project structure created",
        "CI/CD pipeline setup",
        "Testing framework configured",
        "Documentation structure"
      ],
      "activities": [
        "Create module directory structure",
        "Set up development environment",
        "Configure build and deployment pipelines",
        "Set up testing frameworks",
        "Configure code quality tools",
        "Create documentation templates",
        "Set up monitoring and logging"
      ],
      "exitCriteria": [
        "Development environment ready",
        "Project structure established",
        "CI/CD pipeline functional",
        "Testing framework ready",
        "Development tools configured"
      ]
    },
    {
      "id": "4_data_layer",
      "name": "Data Layer Implementation",
      "description": "Implement database models, migrations, and data access layer",
      "deliverables": [
        "Database models implemented",
        "Migration scripts",
        "Data access layer (DAL)",
        "Database indexes and optimization",
        "Data validation logic"
      ],
      "activities": [
        "Create database models and entities",
        "Write database migration scripts",
        "Implement data access layer",
        "Add database indexes for performance",
        "Implement data validation and constraints",
        "Write unit tests for data layer"
      ],
      "exitCriteria": [
        "All models implemented",
        "Migrations tested",
        "Data access layer functional",
        "Performance optimized",
        "Data layer tests passing"
      ]
    },
    {
      "id": "5_api_layer",
      "name": "API Layer Implementation",
      "description": "Implement business logic and API endpoints",
      "deliverables": [
        "Business logic implementation",
        "API endpoints",
        "Authentication and authorization",
        "Input validation and error handling",
        "API documentation"
      ],
      "activities": [
        "Implement core business logic",
        "Create API endpoints and controllers",
        "Implement authentication and authorization",
        "Add input validation and sanitization",
        "Implement error handling and logging",
        "Write API documentation",
        "Write unit and integration tests"
      ],
      "exitCriteria": [
        "All APIs implemented",
        "Authentication working",
        "Error handling complete",
        "API documentation current",
        "API tests passing"
      ]
    },
    {
      "id": "6_ui_implementation",
      "name": "User Interface Implementation",
      "description": "Implement user interface components and user experience",
      "deliverables": [
        "UI components implemented",
        "User workflows",
        "Responsive design",
        "Accessibility features",
        "UI integration with APIs"
      ],
      "activities": [
        "Implement UI components",
        "Create user workflows and navigation",
        "Ensure responsive design",
        "Implement accessibility features",
        "Integrate UI with API layer",
        "Add client-side validation",
        "Write UI tests"
      ],
      "exitCriteria": [
        "All UI components functional",
        "User workflows complete",
        "Responsive design verified",
        "Accessibility requirements met",
        "UI tests passing"
      ]
    },
    {
      "id": "7_integration",
      "name": "System Integration",
      "description": "Integrate module with existing systems and external services",
      "deliverables": [
        "Integration with existing modules",
        "External service integrations",
        "Data migration scripts",
        "Integration testing",
        "Performance optimization"
      ],
      "activities": [
        "Integrate with existing system modules",
        "Implement external service integrations",
        "Create data migration scripts if needed",
        "Perform integration testing",
        "Optimize performance and scalability",
        "Test error scenarios and fallbacks"
      ],
      "exitCriteria": [
        "All integrations working",
        "Data migration tested",
        "Integration tests passing",
        "Performance targets met",
        "Error handling verified"
      ]
    },
    {
      "id": "8_testing",
      "name": "Comprehensive Testing",
      "description": "Perform thorough testing of the complete module",
      "deliverables": [
        "Unit test coverage",
        "Integration test suite",
        "End-to-end test scenarios",
        "Performance test results",
        "Security testing results",
        "User acceptance testing"
      ],
      "activities": [
        "Achieve comprehensive unit test coverage",
        "Execute integration test suite",
        "Perform end-to-end testing",
        "Conduct performance and load testing",
        "Perform security testing and vulnerability scanning",
        "Facilitate user acceptance testing",
        "Fix identified issues and bugs"
      ],
      "exitCriteria": [
        "Test coverage ≥ 80%",
        "All critical tests passing",
        "Performance requirements met",
        "Security vulnerabilities addressed",
        "User acceptance criteria met"
      ]
    },
    {
      "id": "9_documentation",
      "name": "Documentation & Training",
      "description": "Create comprehensive documentation and training materials",
      "deliverables": [
        "Technical documentation",
        "User documentation",
        "API documentation",
        "Deployment guide",
        "Training materials"
      ],
      "activities": [
        "Write technical documentation",
        "Create user guides and help documentation",
        "Finalize API documentation",
        "Create deployment and maintenance guides",
        "Prepare training materials for users",
        "Record demo videos if needed"
      ],
      "exitCriteria": [
        "Documentation complete and reviewed",
        "User guides validated",
        "API docs current",
        "Deployment guide tested",
        "Training materials ready"
      ]
    },
    {
      "id": "10_deployment",
      "name": "Deployment & Launch",
      "description": "Deploy module to production and launch to users",
      "deliverables": [
        "Staging deployment",
        "Production deployment",
        "Monitoring and alerting",
        "User rollout plan",
        "Support procedures"
      ],
      "activities": [
        "Deploy to staging environment",
        "Perform staging validation",
        "Deploy to production environment",
        "Configure monitoring and alerting",
        "Execute user rollout plan",
        "Set up support procedures",
        "Monitor initial usage"
      ],
      "exitCriteria": [
        "Production deployment successful",
        "Monitoring active",
        "Users can access module",
        "Support procedures in place",
        "No critical issues"
      ]
    },
    {
      "id": "11_monitoring",
      "name": "Post-Launch Monitoring & Support",
      "description": "Monitor module performance and provide ongoing support",
      "deliverables": [
        "Performance monitoring reports",
        "User adoption metrics",
        "Issue resolution",
        "User feedback analysis",
        "Optimization recommendations"
      ],
      "activities": [
        "Monitor system performance and stability",
        "Track user adoption and usage patterns",
        "Respond to user issues and questions",
        "Collect and analyze user feedback",
        "Identify optimization opportunities",
        "Plan future enhancements"
      ],
      "exitCriteria": [
        "Performance within targets",
        "User adoption on track",
        "Support issues resolved",
        "User satisfaction acceptable",
        "Handoff to maintenance team"
      ]
    }
  ],
  "roles": [
    {
      "name": "Technical Lead",
      "responsibilities": ["Architecture", "Technical Decisions", "Code Review"]
    },
    {
      "name": "Backend Developer",
      "responsibilities": ["API Implementation", "Database Design", "Integration"]
    },
    {
      "name": "Frontend Developer",
      "responsibilities": ["UI Implementation", "User Experience", "Client Integration"]
    },
    {
      "name": "DevOps Engineer",
      "responsibilities": ["Infrastructure", "Deployment", "Monitoring"]
    },
    {
      "name": "QA Engineer",
      "responsibilities": ["Testing Strategy", "Quality Assurance", "Bug Tracking"]
    },
    {
      "name": "Product Manager",
      "responsibilities": ["Requirements", "User Stories", "Stakeholder Management"]
    }
  ],
  "checkpoints": [
    {
      "step": "0_context_preparation",
      "checkpoint": "Documentation context, agent rules, and project patterns loaded"
    },
    {
      "step": "1_preplanning",
      "checkpoint": "Business case and pre-planning approved (score ≥ 3.5)"
    },
    {
      "step": "2_architecture",
      "checkpoint": "Architecture review and approval"
    },
    {
      "step": "2_5_database_structure",
      "checkpoint": "Database changes applied and documentation updated"
    },
    {
      "step": "4_data_layer",
      "checkpoint": "Data layer implementation complete"
    },
    {
      "step": "5_api_layer",
      "checkpoint": "API layer functional and tested"
    },
    {
      "step": "6_ui_implementation",
      "checkpoint": "UI implementation complete"
    },
    {
      "step": "8_testing",
      "checkpoint": "All testing complete and passing"
    },
    {
      "step": "10_deployment",
      "checkpoint": "Production deployment successful"
    }
  ]
}